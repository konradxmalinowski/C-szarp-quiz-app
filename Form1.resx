<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7CAAAOwgEVKEqAAAARmklE
        QVR4Xu3de/BtZV3HcRWEAkVFRUWBuAx4S5E4CFaTmoliRhxFGskAMxjLxBEkTCzwUoAoeAtQ85KYYQ0G
        6lhkajQTKKVQGKnkZbykeEUwvFTv5nv47nP27/P77XXZe6291+Xzmtn/nPPbz1rPs9az13pu3+dOdzIz
        MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzmwNwZ2C7/GwCTpr6vB34+ByfDwMnTqVz
        1NQx7qLnYNYZwEFZEX4XuAi4DPif/Pwv7fi/qWNEBYrjngscDDxMz9FsKYAdgMOAU4BLgP/Im7VLfpjn
        9RHghVFhgJ/QvJg1AtgN2Ay8C/iM3o098d9ZoQ8HDtA8mtWSleKlwBXAd/Ru67nvA58ETgd2dRvGKgF2
        AY4GLgd+oHfVgF0JnAzsr2ViFhXjocBfA7fqnTMy8aMQvWx7A3fVcrKRAY4D/qGDjewuuBY4QsvMBi56
        c4BnAp9yxSgVXdTxVI0eu/tqWdqAREM0K8an9S6wSr4GnA38pJat9ViOW8Sr1L/pFbe53AIcqeVsPZPT
        PR6RjW9rXozeH67lbj0A3Av4A72i1rhoo7wW2E+vgXUQsD3w5AEO7HVdlHe8xt5Zr4l1BLAP8Da9crZU
        73NvVwcBBwJf0qtlK3E98BS9RrYC2RB/nl4hW7nbgbd4jtcKAXf3KHjn/QXwAL121jLg0Kwc1n1fj7lu
        eg2tJcDPA7fpVbBO+2q8Cuu1tAbl2uvHunL0VoyZnOau4A0Ae8Yvv/57HcDrtcStl07TaztKwP0z+sbf
        56/+a/Rvqsgnxxu1lK234knyIr3Oo5DLVE8APiTRPK7Qv60KeMNUOjYcv6fXerAyyscFM5apfhbYXb9T
        Jp8cQ6wck4gjEaYn1lk8LaaQyyfWrDy745FTFhX5Ge6TJNdXRMV4v+Z8ShTCXDM+gcdrYj33beAF88as
        Ah4FnJkVbEiVZXhPkqwYX6gQFO11+t0qsis3Im8MwX9mW6yRuFT5ZH0G8O96oB7r/5MknxiPAT5QoWKE
        r8xzU2TlGELwhIhDFZFC7q15bEIuBHtFPlH6LvLQ38HEHLn+G81ViUM1nTLA3XJQqe9ilP9AzV8bYirH
        QJ4mcd37VUkyTlS0MX6suSnxqroT1fIJdZUm1DMRJzeCTO+s+WtT/rCcM4C2SbydbK/56yTg1+ZceBRt
        h/tpemVyVm7fL/BKp1NkUIW+O0/z1Sm58Cjm9M97s56paZbJiOTzHq8L4snxO5qvZcvp/xHhvc9+1Nmg
        EMAxc7xOTbuubkS+vKif14R65krN1yoN4EnyDeA+mq+VyWkh781fwnnFE2Czpl1mAHOsokHeqVhRcXMB
        N+qJ9sx7NF8rATwya+yi/lnTLgM8oeezc6O9NdfAX9ti9sKCP3hd8EzN11Lljkg361nN6Wmafhngak2k
        ZxZqlOfrZYwtxQ/Fn+Yy1fjENJPa3eQqexP7LKJg7qj5al0OMkXcqKYaxtGor9U9l/OMqgw4dtUXY9mv
        5quKXC58foW21+eAF897k+R1jhkPfXa25qtV+X4am6c0qdYvaYwTDGBA8AzNVxXZff49TazEl+Npr2lV
        ARyrifVM9Go9UPPVCuCeLVSOeA+v9UsaN5cm0jMRtaPWNJocCI0ohPOKp+0LNd0y+bSKm6zPLtB8Na6l
        J0f4fT1WkQgsNucAZJf8pearTC4HaMIpmnaZGHzTRHom7pf2AtJlrNpP6FEbEL0kB+nxisT0Zk2khx6u
        +SqSYTmbau9FOr+pxyiSSwf63N4L52u+GhGzSVt6coSb9HhFciFQE13Kq/TNOlNpMs+xWU+TIopk3blu
        39JEeiZea/fSfC0kK0cbT46J5+gxi+T07L67VvNVJLePbsOpeqwiORDcd+dqvuaWr1VtPTkmas1a7fEe
        49NO13wVaXFE+xo9VhHg5ZpAD91Qt3NkJuCdmnrDPlZn7AN4qibQUydp3maJtkq+GrRlHz3mLMBz9cs9
        dbTmrZYcnW1yEHCWl+ixiwBv1QR6qk4FeZJ+uWGVZy/kwqohuEzzVguwSVNsQSyRrNx7leuo+z4vaOJE
        zd8sEbBCv9ywc/SYs+TcrCGIJ/JPa/4qyT35ltFb8XU9dhHgeE2gx2JyZZRxlU/dEfO6xlhBQv0gD7n9
        WLQLluHNevwi3kizNWOtIJdo/koBZ2kqLTpZjz9LjpxHCHxr3v5a3rMMqA0S4nW9em9WrulY5nybysP+
        wIP1y9aYOr1YsbRhSJ6ledxQToKL/uFliVHhyivoBrAmoauu1rIuArxME+i5atPgV7D++IN6DkUykLU1
        r/JrbsgIj0Pyac3jOtnwWvbM2LojyRFh0JoVi6Aqb0STU47a7lFbtsjP3prXNYBX67eW4Bl6HrPkSPIy
        20ZjEAPAh2hZFwGerokMxCbN61Y5hbnt0fKNHKPnMssAVrN1Ua3VmyFGnzWRgdh42kmOTK8iTGcMktWZ
        f3WiJmBzi/UctYPTDSS6ySwXaX63AH5J/3JJbtVzKZLbr9niIkDEXHs8Au/QxAZkZgVZxdMj1K0g7sFa
        XESM2VfLtopoxA5kK4lZ/lXzPGl7rOqRWbfv3U+QxcQM6O20XKtqcB18Z2meI9OrXIA/1rk/q/C2Ol25
        Kl/DV9GJs1Sa6Qjbs8pxBVeQ5fiXBZ8cUfaxeergacYj+voquYK0Lxrk+2l51pG74o6CZvwm/YMlcwVp
        V3TlHqZlWVUDwel6ZzrzB87Yh3yZXEHaVXucY9oYGuVqOvOn63+ugCtIe2KfkcqDsNOmNvIcfKNcTQog
        Vgteo/+5Aq4g7Yj4xgdoGVYBPG4sDfKNTAohovN1gStIOy7V8qsC+PUxPjWmTQriBP2PFXEFaUftXqtY
        UeeZ0tsqSFdW5dWpILEG4buagK1TKwBGyB2pRv3kmJgUSFf6tWtF2Ab+ThOwNaJX8qFabkXGNAhYRRTI
        vh3a6PI2vWBFPFmx1HVaZmUcQmmNL0SBLCNSYlWezdusuuFbf3aFE1W76KIolNjTrivqVpBTNQFbYw8t
        s1mAnXLXV9tmSwW5SP91xeoETPaS29n+UcurSIaVtbVOiIK5WP91xeoEbTgE+LEmYFtcrOVVBLhCEzA2
        RcF0rTvvt/XiFVnx9PwuO07Lqoi7zNeJcLb3iYLpmrqB4/5JE7AtjtWymiUXP/V9E86m3TApnK65Frir
        XsRZgNdoArZl/KPyasGY5asJWO4Zr//aEbvpRZwFeJR+2WpXELc/1vuFSeF00fF6EWfJkV+/P6/lCrK4
        OwKo6792xHl6EYsAH9YERs4VZDHv2Vp++j8dcbNexCKOsLhOdH0fV+PT9nbefbOtg0P/pyOi6/bBa2pB
        AWAHT5GwhtwCPGj65uqqI9bUggK5NfWlmoDZHP5Wb66ueveaEy2Ro+pmi3qO3lhdFVPwd1pzsgVi7MST
        7WxBsUvW2u3/9C865qg1J1sCOEUTMKvhjsFBuam67I7h/oqAXYHbNRGzCqJrfH3HEPAB/csOid6sh+g5
        FwFeromYVXCJ3ktbdHA9iHq+nnMRYM8Bbihp7fohsJfeS1sAF+pfd8x/1Zm8GIDXayJmBd6k99BWwKP1
        rzvoDD3vIsC9/BSximKAeX3bYwI4WL/RQdfreZcBXqmJmG3gNL131ulQXKwiT9DzLpMBl8coFj9FsOqP
        Vvx8UxMYiS8B99D7Zp3YrFC/2UFX6XmXATaPdI7WD7Qsiox0Nm8sNX+ilsWGYoBEv91B8av4WD33MsA7
        NaER8HT3cnE/Vev8iT2y9dsdFa8Dd9HzLwLsCHxbExo4V5BytSpITBf/vKbQUbV3ScqgBGPiClIuXrGq
        D0IDf6IpdFQ8DXbW8y+S0+HP1YQGzBWkmuo/tsDj9dsdVivmbMgNKG/QhAbKFaSa6hUk5Kh1X9TeUgy4
        /0i6fl1BqjlTy6JQBEvQFDrsRj3/KrI9MvSuX1eQaj6pZVEIOFRT6LizNA9VAMcMPKavK0g1tStIvKdf
        qal0WEyH/znNRxXA0QOuJK4g1cQAeeVy2gI4WVPpuIjNWz5dYAMDXoHokfTqHq7lUQjYDviKptJxb9V8
        VJHr2Ie65VhEm6z6GeqTtIp6FSQAv6Gp9MApmo8qcqT9vZqYjcZcFeRuwOc0pY6L/Rz217xUAWwP/GGu
        LLNxebXeD5X0sC0SYhxn9uKXErG7lffJGJ0L9D6oJKdnfFFT64HYX2R7zU9VWUl+pInaYJ2v90BlPY5W
        +O7obND8VAUcCXxKE7VBurl2V+804H2aYk+8a8FK8oCRTEsZu1pjRusAu/T4vTyeJIu8bu0MnKOJ2qAs
        XEFirKCvFSTEk6TWIisFPB34jiZsgxD3du14B1sNoIKEP6+8emyGfJpc7gb8INXaMnuN/PUcgoWfJAF4
        FvBZTdx6baEKMqQtgqOSLPQkCRne9O2auPXWhXqNKxtYBQkLv26FnPn8y8DVA3gFHbuP6vWtLHf8HJov
        zzstZSPA83o4wbOrInjIaTnguywLVZCh7oD6tZiotlAX3xTgnsCpwK16IKskrsezgbtneUbn0FOAa5bw
        hI5KuYte00oGXEEm5poFPEsGzo6Jj1/VA9mGYtuzWJezg5blBPDUJTxR9tTjlgLum7Nkhyx+nd40+eVq
        SnYLx4WPNkrEYLJtYv1JxMX9rXV7As6QT5QnAR/TxBoyVwWJV5CxiBv5IC2DJuQvYHQOtP2q0AexpPsx
        WkZ1AL8KfFwTXtAv6nFKjayChJh2EO2IuedwFQH2yAbojSOIrDIRcQOuz/jP0U5beCwq5BqewxusKH+k
        xyg1oEHCuuJ9d18tjyYBjwROz2MN7ckSlT/iKL+hyd7CWXL2dbx6LfIqO1cFuUBTGZG4aaP7ttG2icrx
        lAOAk3JD1W/oifREdHPHr3mUWQToa6R3sKosxycv0Jh/i6ZZauQVZOIjwGFNvRqUAXYDHhZLQfNXOF5R
        uhZUIeajxXm9H/jjeErEFtyal1XIoCPR5qvbPXyLplUK+CtNZcTix2J3LaNlyNexY4HXAh9a4FdyXlfl
        caMyxHm0/trUhBxHqVpW39XvF8olt9FotW1uAc5u+7WrTHZ57p6ffYFX5P7w8XlZTqb8Vo1P3EST78fn
        LOCBU8dY6utSk7KsjqjQRolrW33tkCtIodjT76VaZtZtwK+U9Hpt1u/MlKF/HAZntvg1il+dM2P0XMvP
        uimfKLO6h2tVkOP12zZTzDaIDXrureVo3bXBgGOtCnLc1BetmtuB1wGP1vK0bsper8kT5XL9/5mAE/Tq
        Wy0xyTPW0lRv+NnKZJt7H/33mbIP3hYXffHviMe5lrH12AoqyBiCIUS84xhL+Jm6G5Faxyyxgnw/R403
        5c0zFjE6fmnOI3qElr91WA4StT3b9Dbg4lhzMnXceA88OOckjamLOcabIgRmbMX93FyHs+Paq2KdkVE7
        2hKvUhGtcG897rR8DbkkB+XGKKaIfzAXXUVA7UO0jGxFct1C02InozfHZDw9XhFgp3z1iikRYxavZLHe
        PQYnXzXv3ozWAOD5enUWEK9q8cSov6RxSk6h3gz8WcmcmqG7LLvg/Qq2KrF4RK/KHCKWbbQxGp8BC+wH
        vAi4Tg86ULEba0xIPKjPEwcHY8EKEq8C0SvVeMXYCPAQ4CXAJwY0uTI6KG7KJ2+sDXGl6JI5I0d8L6dZ
        7KXpLUuuU44NSKNx27cNcGKMJBZnxevTPVwpOiwb1FXF/KM3AvfTdFYpwslkZ0MsAX1l/iJHvuqsMmtL
        nEd068Z5HZW9hitdY2I1VKwgseTyvLLu2q4BnpiN/VhYdEV+2tr74zNTx4jXzjjukXpO1iP5Tl/0Lh9d
        jRFobesAX9/lLlq75iciI74AOGOOT0yfnqQTn0pB0axH8lduI9H4jkbjT+l3zEZjgwoyGeDrVBvDbCWA
        F2fFiAG+WCW3h/6N2WhlY/JC4EH6f2ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
        tnz/D99Tj7aLEYNfAAAAAElFTkSuQmCC
</value>
  </data>
</root>